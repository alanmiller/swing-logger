name: Nuitka-Compile

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Read Version
        id: get_version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Build Executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m nuitka --onefile \
            --output-filename=swinglogger.exe \
            --product-version=${{ env.VERSION }} \
            --include-data-files={MAIN_DIRECTORY}/../config.yaml=config.yaml \
            --file-description=swinglogger \
            --product-name=Swing-Logger \
            --file-version=1.0 \
            src/main.py

      - name: Build Executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m nuitka --onefile \
            --output-filename=swinglogger \
            --product-version=${{ env.VERSION }} \
            --include-data-files={MAIN_DIRECTORY}/../config.yaml=config.yaml \
            --file-description=swinglogger \
            --product-name=Swing-Logger \
            --file-version=1.0 \
            src/main.py

      - name: Build Executable (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          python -m nuitka --mode=app --macos-app-icon=logger.png \
            --output-filename=swinglogger \
            --product-version=${{ env.VERSION }} \
            --include-data-files={MAIN_DIRECTORY}/../config.yaml=config.yaml \
            --file-description=swinglogger \
            --product-name=Swing-Logger \
            --file-version=1.0 \
            src/main.py

      - name: Upload Artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: swinglogger.exe
          include-hidden-files: true

      - name: Upload Artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: swinglogger
          include-hidden-files: true

      - name: Upload Artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: swinglogger
          include-hidden-files: true

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Download Artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./artifacts/windows

      - name: Download Artifacts (Linux)
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: ./artifacts/linux

      - name: Download Artifacts (macOS)
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: ./artifacts/macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/swinglogger.exe
          asset_name: swinglogger.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux/swinglogger
          asset_name: swinglogger
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos/swinglogger
          asset_name: swinglogger
          asset_content_type: application/octet-stream

